{
  "actions": [
    {
      "id": "get-metadata",
      "description": "GET /metadata",
      "mapping": "doGetMetadata"
    },
    {
      "id": "metadata-http-200",
      "description": "Assert HTTP status=200",
      "mapping": "isMetaDataHttp200"
    },
    {
      "id": "metadata-content-type",
      "description": "Assert Content-Type='application/fhir+json'",
      "mapping": "isMetadataContentTypeOk"
    },
    {
      "id": "capstat-validation-success",
      "description": "Get Validate and Assert CapabilityStatement validation passed successfully",
      "mapping": "isCapstatValidationSuccess"
    },
    {
      "id": "extract-identifiers",
      "description": "Extract resource identifiers from all sampled instances",
      "mapping": "doExtractIdentifiers"
    },
    {
      "id": "extract-gender",
      "description": "Extract Patient.gender value sampled instances",
      "mapping": "doExtractGender"
    },
    {
      "id": "doSamplingInput",
      "description": "doSamplingInput - Create input for sampling, one object for each resourceType (done on infoBinsDistinct.json), with the maximal historical depth",
      "mapping": "doSamplingInput"
    },
    {
      "id": "sample-wrapper",
      "description": "Initiate the sampling process",
      "mapping": "doSampleWrapper"
    },
    {
      "id": "doFailSearch",
      "description": "Send an invalid search request and write results to file",
      "mapping": "doFailSearch"
    },
    {
      "id": "isFailedSearchOK",
      "description": "(Test 114) Assert server responds to invalid search request according to spec",
      "mapping": "isFailedSearchOK"
    },
    {
      "id": "doSuccessfulReadResponse",
      "description": "Write to file the HTTP response of a successful read (GET) request for inspection by other maps",
      "mapping": "doSuccessfulReadResponse"
    },
    {
      "id": "isGetContentTypeOK",
      "description": "This map Assert Content-Type='application/fhir+json' on a simple read (GET) response",
      "mapping": "isGetContentTypeOK"
    },
    {
      "id": "isReadId",
      "description": "On simple read (GET), check response resource ID is of correct data-type and matches input ID (Test 87)",
      "mapping": "isReadId"
    },
    {
      "id": "doExtractIds",
      "description": "(Test31) - Check if all sampled instances resource.id comply with FHIR id datatype requirements",
      "mapping": "doExtractIds"
    },
    {
      "id": "isReadResource",
      "description": "(Test 84) - On simple read (GET), Check simple read returns a resource and not a bundle",
      "mapping": "isReadResource"
    },
    {
      "id": "doBirthDateDist",
      "description": "(Test 68) - Patient.birthDate disterbution",
      "mapping": "doBirthDateDist"
    },
    {
      "id": "isReadHasId",
      "description": "(Test29) - The returned resource SHALL have an id element",
      "mapping": "isReadHasId"
    },
    {
      "id": "doCountResources",
      "description": "(Test26) - Count health data protability act relevant resources supported by the server by resource type",
      "mapping": "doCountResources"
    },
    {
      "id": "isDuplicateIds",
      "description": "(Test28) - Check the ID is unique for the resource type in the sampled data",
      "mapping": "isDuplicateIds"
    },
    {
      "id": "isSuccessfulSearchCode",
      "description": "(test 115) - Assert server returned an HTTP 200 response code to a Successful search request",
      "mapping": "isSuccessfulSearchCode"
    },
    {
      "id": "isReadIdRegex",
      "description": "(Test 85) - On simple read (GET), check response resource id matches the datatype id regex",
      "mapping": "isReadIdRegex"
    },
    {
      "id": "isPagingSearch",
      "description": "(Test 118) - On simple read (GET), check response resource id matches the datatype id regex",
      "mapping": "isPagingSearch"
    },
    {
      "id": "doInfoBinsDistinct",
      "description": "Create a distinct list of resourceTypes to be sampled",
      "mapping": "doInfoBinsDistinct"
    },
    {
      "id": "doSuccessfulSearch",
      "description": "Perform a search operation based on the verified resource type",
      "mapping": "doSuccessfulSearch"
    },
    {
      "id": "isSuccessfulSearchBundle",
      "description": "(Test 108) - Validate search result is Bundle",
      "mapping": "isSuccessfulSearchBundle"
    },
    {
      "id": "doExtractEncounterClass",
      "description": "(Test 59) - Encounter.class disterbution",
      "mapping": "doExtractEncounterClass"
    },
	{
      "id": "isSuccessfulSearchBundleType",
      "description": "(Test 109) - Validate search result is Bundle with type=searchset",
      "mapping": "isSuccessfulSearchBundleType"
    },
	{
	  "id": "isGetHttp200",
      "description": "(Test 90) - Validate that the returned HTTP status is 200(OK)",
      "mapping": "isGetHttp200"	
	}

  ],
  "kits": [
    {
      "id": "data-portability",
      "name": "IL Data Portability Law",
      "description": "This test kit is meant to provide information on the level of conformance to the Israeli regulation regarding health data portability",
      "children": [
        {
          "id": "cap-stat",
          "name": "CapabilityStatement",
          "children": [
            {
              "id": "capstat-exists",
              "name": "Existence",
              "children": [
                {
                  "id": "test11",
                  "name": "Check there is a CapabilityStatement",
                  "description": "Check there is a CapabilityStatement",
                  "details": "Check GET metadata returns a CapabilityStatement.\n Applications SHALL return a resource that describes the functionality of the server end-point.\n https://hl7.org/fhir/R4/http.html#capabilities \n RESTful servers are required to provide this resource on demand. Servers SHALL specify what resource types and operations are supported \n https://hl7.org/fhir/R4/capabilitystatement.html#notes",
                  "actions": [
                    "get-metadata",
                    "metadata-http-200"
                  ]
                }
              ]
            },
            {
              "id": "capstat-validity",
              "name": "Validity",
              "children": [
                {
                  "id": "test173",
                  "name": "CapabilityStatement Content-Type",
                  "description": "IF CapabilityStatement was returned, check Content-Type validity",
                  "details": "The response headers from /metadata must include Content-Type: application/fhir+json",
                  "actions": [
                    "get-metadata",
                    "metadata-content-type"
                  ]
                },
                {
                  "id": "test10",
                  "name": "Base Validation",
                  "description": "IF there is a CapabilityStatement - validate it against the base resource",
                  "details": "https://hl7.org/fhir/R4/capabilitystatement.html",
                  "actions": [
                    "capstat-validation-success"
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": "dqa",
          "name": "Data quality assurance",
          "children": [
            {
              "id": "patient-dist",
              "name": "Patient elements distributions",
              "children": [
                {
                  "id": "test57",
                  "name": "Patient Identifier system distribution",
                  "description": "Patient Identifier system distribution",
                  "details": "Check if the distribution of Patient.identifier.system makes sense.",
                  "actions": [
                    "sample-wrapper",
                    "extract-identifiers"
                  ]
                },
                {
                  "id": "test70",
                  "name": "Patient gender distribution",
                  "description": "Patient gender value distribution",
                  "details": "Check if the distribution of Patient.identifier.system makes sense.",
                  "actions": [
                    "sample-wrapper",
                    "extract-gender"
                  ]
                },
                {
                  "id": "test68",
                  "name": "Patient birthdate distribution",
                  "description": "Patient birthdate value distribution",
                  "details": "Check if the distribution of Patient.birthDate makes sense.",
                  "actions": [
                    "sample-wrapper",
                    "doBirthDateDist"
                  ]
                }
              ]
            },
            {
              "id": "encounter-dist",
              "name": "Encounter elements distributions",
              "children": [
                {
                  "id": "test59",
                  "name": "Encounter class distribution",
                  "description": "Encounter class distribution",
                  "details": "Check if the distribution of Encounter.class system & code makes sense.",
                  "actions": [
                    "sample-wrapper",
                    "doExtractEncounterClass"
                  ]
                }
              ]
            },
            {
              "id": "resource-validation",
              "name": "Resource validation",
              "children": [
                {
                  "id": "test31",
                  "name": "Response resource ID is ID (matches ID regex)",
                  "description": "Response resource ID is ID (matches ID regex)",
                  "details": "id\tAny combination of upper- or lower-case ASCII letters ('A'..'Z', and 'a'..'z', numerals ('0'..'9'), '-' and '.', with a length limit of 64 characters. (This might be an integer, an un-prefixed OID, UUID or any other identifier pattern that meets these constraints.)\txs:string\tJSON string\nRegex: [A-Za-z0-9\\-\\.]{1,64}\n\n2.24.0.1 Primitive Types \nhttps://hl7.org/fhir/R4/datatypes.html#primitive",
                  "actions": [
                    "sample-wrapper",
                    "doExtractIds"
                  ]
                },
                {
                  "id": "test28",
                  "name": "ID uniqueness within the sample",
                  "description": "ID uniqueness within the sample",
                  "details": "Check the ID is unique for the resource type in the sampled data.",
                  "actions": [
                    "sample-wrapper",
                    "isDuplicateIds"
                  ]
                }
              ]
            },
            {
              "id": "resource-count",
              "name": "Resource count",
              "children": [
                {
                  "id": "test26",
                  "name": "Count of resources by resource type",
                  "description": "Count of resources supported by the server by resource type",
                  "details": "Count of resources supported by the server by resource type",
                  "actions": [
                    "doInfoBinsDistinct",
                    "doCountResources"
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": "search",
          "name": "Search",
          "children": [
            {
              "id": "search-fail",
              "name": "HTTP Status Codes - on Fail",
              "children": [
                {
                  "id": "test114",
                  "name": "Check for error codes and OperationOutcome on failed search",
                  "description": "Check for error codes and OperationOutcome on failed search",
                  "details": "If the search fails (cannot be executed, not that there are no matches), the return value return value SHALL be a status code 4xx or 5xx with an OperationOutcome.",
                  "actions": [
                    "doFailSearch",
                    "isFailedSearchOK"
                  ]
                },
                {
                  "id": "test115",
                  "name": "Check HTTP Success code 200 Successful search",
                  "description": "Assert server returned an HTTP 200 response code to a Successful search request",
                  "details": "If the search succeeds, the server SHALL return a 200 OK HTTP status code \n 3.1.0.9 search https://www.hl7.org/fhir/r4/http.html#search",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulSearch",
                    "isSuccessfulSearchCode"
                  ]
                }
              ]
            },
            {
              "id": "search-paging",
              "name": "Paging search results",
              "children": [
                {
                  "id": "test118",
                  "name": "Assert endpoint pages results according to standart",
                  "description": "Test FHIR endpoint pages results with required links via forced paging done by asking for a single resource on each page of a search set.",
                  "details": "The result collection can be long, so servers may use paging. If they do, they SHALL use the method described below (adapted from RFC 5005 (Feed Paging and Archiving ) for breaking the collection into pages if appropriate.\n3.1.0.9 search \nhttps://www.hl7.org/fhir/r4/http.html#search\nPaged feed documents MUST have at least one of these link relations present\n3.  Paged Feeds\nhttps://datatracker.ietf.org/doc/html/rfc5005#section-3\n\n3.1.0.14 Paging \n,https://www.hl7.org/fhir/r4/http.html#paging",
                  "actions": [
                    "doInfoBinsDistinct"
                    ,"doCountResources"
                    ,"isPagingSearch"
                  ]
                }
              ]
            },
            {
              "id": "bundle",
              "name": "Bundle",
              "children": [
                {
                  "id": "test108",
                  "name": "Validate search interaction returns Bundle",
                  "description": "the return content SHALL be a Bundle",
                  "details": "the return content SHALL be a Bundle",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulSearch",
                    "isSuccessfulSearchBundle"
                             ]
                },
		{
                  "id": "test109",
                  "name": "Validate search interaction returns Bundle of type searchset",
                  "description": "The return content SHALL be a Bundle with type = searchset",
                  "details": "The return content SHALL be a Bundle with type = searchset",
                  "actions": [
				       "sample-wrapper",
				       "doSuccessfulSearch",
					   "isSuccessfulSearchBundleType"
                          ]
                 }
              ]
            }  
          ]
        },
        {
          "id": "read",
          "name": "Read",
          "children": [
            {
              "id": "read-get",
              "name": "Read by GET",
              "children": [
                {
                  "id": "test86",
                  "name": "Confirm that the returned HTTP Header Content-Type is present and valid",
                  "description": "Confirm that the returned HTTP Header Content-Type is present and valid",
                  "details": "The correct mime type SHALL be used by clients and servers:\n\nXML: application/fhir+xml\nJSON: application/fhir+json\nRDF: application/fhir+turtle (only the Turtle format is supported)\n\n3.1.0.1.9 Content Types and encodings \nhttps://www.hl7.org/fhir/R4/http.html#mime-type",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulReadResponse",
                    "isGetContentTypeOK"
                  ]
                },
                {
                  "id": "test87",
                  "name": "Response resource ID matches input ID",
                  "description": "Response resource ID matches input ID",
                  "details": "The returned resource SHALL have an id element with a value that is the [id]\n\n3.1.0.2 read \nhttps://hl7.org/fhir/R4/http.html#read",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulReadResponse",
                    "isReadId"
                  ]
                },
                {
                  "id": "test85",
                  "name": "Response resource id matches the datatype id regex",
                  "description": "On simple read (GET), check response resource id matches the datatype id regex",
                  "details": "The returned resource SHALL have an id element\n 3.1.0.2 read \n https://hl7.org/fhir/R4/http.html#read",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulReadResponse",
                    "isReadIdRegex"
                  ]
                },
                {
                  "id": "test84",
                  "name": "Response returns a resource and not a bundle",
                  "description": "Response resource ID matches input ID",
                  "details": "This returns a single instance with the content specified for the resource type \n 3.1.0.2 read \n https://hl7.org/fhir/R4/http.html#read",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulReadResponse",
                    "isReadResource"
                  ]
                },
                {
                  "id": "test29",
                  "name": "Cehck ID element exist",
                  "description": "Check the returned resource SHALL have an id element",
                  "details": "Check the returned resource SHALL have an id element",
                  "actions": [
                    "sample-wrapper",
                    "doSuccessfulReadResponse",
                    "isReadHasId"
                       ]
                },
		{
                  "id": "test90",
                  "name": "HTTP status is 200",
                  "description": "Confirm that the returned HTTP status is 200(OK)",
                  "details": "Confirm that the returned HTTP status is 200(OK)",
                  "actions": [
				    "sample-wrapper",
                    "doSuccessfulReadResponse", 
                    "isGetHttp200"
                             ]
                } 
		
              ]
            }
          ]
        }
      ]
    }
  ]
}