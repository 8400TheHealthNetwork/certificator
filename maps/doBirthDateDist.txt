(
  /*Write initial map status for UI to status file*/
    {
      'statusCode':'in-progress'
      ,'statusText':'in-progress'
    } ~> $writeFile('actionStatus_doBirthDateDist.json')

  // List all sampled Patient instances (only) file names
    ;$sampledResources := $readDir()[$contains(/\[Patient\]_\[[^\]]*\]\.json/i)]

  // For each sampled resource create an object with relevant data (file name, resource id etc) including if the id is or is not valid
    ;$birthDates := $sampledResources@$fn.$readFile($fn).{
      "fileName" : $fn
      ,"id" : $.id
      ,"birthDate" : birthDate
      ,'count' : 1
      }
  
    ;$writeFile($birthDates,'birthDates.json')

  // Create timeline
    ;$minBirthDate := $min($birthDates.$toMillis(birthDate)) //~> $fromMillis('[Y0001]-[M01]-[D01]')

    ;$maxBirthDate := $max($birthDates.$toMillis(birthDate)) //~> $fromMillis('[Y0001]-[M01]-[D01]')

    ;$durrationMil := $maxBirthDate-$minBirthDate
    ;$24HMil := (1000*60*60*24)
    ;$days := $durrationMil/$24HMil
    ;$daysRounded := $days - $days%1
    ;$datesArrMil := [0 .. $daysRounded].($minBirthDate + $*$24HMil)
    ;$datesArrDt := $datesArrMil.$fromMillis('[Y0001]-[M01]-[D01]')
    ;$datesObj := $datesArrDt.{'date':$, 'count':0}

  // experiment - left ojin by tranform
    //;$datesObj@$do ~> | $do.* | {'count' : 1} |
    
  // Left join birthdates to timeline
    ;$datesObj@$do.($bd := $birthDates[birthDate = $do.date])

    ;$exists($bd) ? $bd.{
      'date': $do.date
      ,'count' : count
    } : {
      'date': $do.date
      ,'id' : $do.count
    }

  // Aggregate to date level

)