// doBirthDateDist (Test 68) - Patient.birthDate disterbution
(
  /*Write initial map status for UI to status file*/
    {
      'statusCode':'in-progress'
      ,'statusText':'in-progress'
    } ~> $writeFile('actionStatus_doBirthDateDist.json')

  // List all sampled Patient instances (only) file names
    ;$sampledResources := $readDir()[$startsWith($, '[Patient]_[') and $endsWith($,'].json')]

  // For each sampled resource create an object with relevant data (file name, resource id etc) including if the id is or is not valid
    ;$birthDates := $sampledResources@$fn.$readFile($fn).{
      "fileName" : $fn
      ,"id" : id
      ,"birthDate" : birthDate
      ,"birthDateWeek" : $fromMillis($toMillis(birthDate),'[Y0001]-[W]')
      }
  
    ;$writeFile($birthDates,'birthDates.json')

  // Create timeline
    ;$minBirthDate := $min($birthDates.$toMillis(birthDate)) //~> $fromMillis('[Y0001]-[M01]-[D01]')

    ;$maxBirthDate := $max($birthDates.$toMillis(birthDate)) //~> $fromMillis('[Y0001]-[M01]-[D01]')

    ;$durrationMil := $maxBirthDate-$minBirthDate
    ;$24HMil := (1000*60*60*24)
    ;$days := $durrationMil/$24HMil
    ;$datesArrMil := [0 .. $days].($minBirthDate + $*$24HMil)
    ;$datesArrDt := ($datesArrMil.$fromMillis('[Y0001]-[W]'))~>$distinct()

  // // Aggregate patient by birthDate week
    ;$birthDatesAgg := $birthDates{birthDateWeek:$count($)}

  // Join timeline and count of patinet by date of birth
    ;$birthDatesTimeLineAgg := $datesArrDt.(
      $aggCnt := $lookup($birthDatesAgg, $)
      
      ;{
        'date' : $
        ,'count' : $aggCnt ? $aggCnt : 0
      }
    )

    ;$writeFile($birthDatesTimeLineAgg,'birthDatesTimeLineAgg.json')
)