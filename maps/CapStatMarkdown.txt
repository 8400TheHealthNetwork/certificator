$SourceForCapStat().(
  $header := function($level, $text){($level > 1 ? ($join([1..$level-1].(''),'  ') & ('- ')) : '') & $join([1..$level].('#')) & ' ' & $text & '\n'};
  $link := function($hyperlink){('[' & $hyperlink.display & '](' & $hyperlink.target & ')')};
  $list := function($items, $level){(
    $indent := ($level > 1 ? ($join([1..$level-1].(''),'  ')) : '');
    $exists($items) and $type($items[0])='string' ? 
    ($indent & '- ' & $join($items, '\n' & $indent & '- ') & '\n')
  )};
  $par := function($text){'\n' & $text & '\n'};
  $bold := function($text){'**' & $text & '**'};

  $resourceTypes := $distinct([
    search_params.per_type.il_core_params.resource_type,
    search_params.per_type.patient_compartment.resource_type,
    search_params.per_type.info_basket_date_params.resource_type,
    search_params.per_type.us_core_params.resource_type,
    functional_lists.list_search_param,
    profiles.resource_type
  ]);

  $globalSP := search_params.global.name;
  $searchParams := $distinct([
    search_params.per_type.il_core_params,
    search_params.per_type.patient_compartment,
    search_params.per_type.info_basket_date_params,
    search_params.per_type.us_core_params,
    search_params.per_type.us_params_from_combinations,
    search_params.per_type.identifier,
    search_params.per_type.list_item,
    functional_lists.list_search_param.{
      'resource_type': $,
      'name': '_list',
      'documentation': 'Fetch resources referenced by functional lists',
      'level': 'SHOULD'
    }
  ])[$not(name in $globalSP)];


  
  $header(1, 'IL Core Server CapabilityStatement')
  & $par("This section describes the capabilities expected to be supported by a Server conformant to IL Core. Note that this is the general CapabilityStatement that applies to all server actors - other, more specific CapabilityStatements derived from this one may apply to a server actor and may include more specific requirements.")
  & $header(2, "The IL Core Server **SHALL**:")
  & $list(
    [
      'Implement the RESTful behavior according to the FHIR specification.',
      'Support the JSON format for all interactions.'
    ],3)
  & $header(2, "**SHALL** Support the Following Implementation Guides:")
  & $list(igs[level='SHALL'].$link(hyperlink), 3)
  & $header(2, "**SHALL** Support the Following Compartments:")
  & $list(compartments[level='SHALL'].($link(hyperlink) & ' - ' & $par(comments.text)),3)
  & $header(2, "**SHALL** Support the Following Functional Lists:")
  & '  ' & $par(functional_lists.comment.text)
  & $list(functional_lists.lists.($bold(name) & ' - ' & description), 3)
  & $header(3, 'See:')
  & $list([functional_lists.hyperlink.$link($),functional_lists.comment.hyperlinks.$link($)],4)
  & $header(2, "Server Level Interactions")
  & $header(3, "**SHALL** Support:")
  & $list([server_interactions[level='SHALL'].code],4)
  & $header(3, "**SHOULD** Support:")
  & $list([server_interactions[level='SHOULD'].code],4)
  & $header(2, 'Resource Level Requirements')
  & $header(3, "**SHALL** Support these Resource Types:")
  & $list(mandatory_resources[],4)
  & $header(3, "**SHALL** Support these Interactions for All Supported Resource Types:")
  & $list(['read', 'search-type'],4)
  & $header(3, "**SHALL** Support these Search Parameters for All Supported Resource Types:")
  & $join(search_params.global[level='SHALL'].(
    $header(4, name)
    & $list([
      $bold('Type') & ': ' & type & '\n\n',
      $bold('Description') & ': ' & documentation & '\n\n',
      ($exists(comment) ? ($bold('Comment') & ': ' & comment.text & '\n\n') : undefined),
      ($exists(hyperlink) ? ($bold('See') & ': ' & $link(hyperlink) & '\n\n') : undefined)
    ],5)
  ), '\n') 
  & $header(3, 'Chaining and Reverse Chaining')
  & $par('  For all search parameters a server is required to support (by this CapabilityStatement or by any other applicable regulation), it **SHALL** also support both chaining and reverse chaining (_has) between parameters of type reference and parameters of the target resource. Servers **SHOULD** also support chaining/reverse-chaining on all other relevant search parameters.')
  & $header(4, 'See:')
  & $list([
    $link({
      "target": "https://www.hl7.org/fhir/R4/search.html#chaining",
      "display": "Chained parameters"
    }),
    $link({
      "target": "https://www.hl7.org/fhir/R4/search.html#has",
      "display": "Reverse Chaining"
    })
  ],5)
  & $header(3, 'RESTful Capabilities by Resource/Profile')
  & $par('  This section defines the minimal required capabilities that a server must expose for each specific resource type, if it claims to support it. This CapabilityStatement does not define which resource types a server is required to implement (except for Patient and List mentioned above) - this may be defined by other applicable rules and regulations and will differ between servers.')
  & $join($resourceTypes@$rt.(
    $profile := profiles[resource_type=$rt];
    $params := $searchParams[resource_type=$rt];
    $ops := operations[scope='resource-type' and resource_type=$rt];

    $header(4, $rt)
    & $list(($exists($profile)?($bold('Profile') & ': ' & $link({'target': $profile.url, 'display': $profile.name})):undefined),5)
    & $header(5, 'Interactions (**SHALL**):') & $list(['read', 'search-type'],6)
    & (
      $exists($ops) ? (
        $header(5, 'Operations (**SHALL**):') & $list($link($ops.hyperlink),6)
      ) : ''
    )
    & ($exists($params[$exists(level)=false or level='SHALL']) ? $header(5, 'Search Parameters (**SHALL**):')
    & $list($params[$exists(level)=false or level='SHALL'].{'display': name, 'target': definition}.$link($), 6))
    & ($exists($params[level='SHOULD']) ? ($header(5, 'Search Parameters (**SHOULD**):')
    & $list($params[level='SHOULD'].{'display': name, 'target': name = '_list' ? 'https://www.hl7.org/fhir/R4/search.html#list' : definition}.$link($), 6)))
  ), '\n')
  
  ;
  /*&*/ 
  /*$toMarkdown({'p': 'sdsds'})*/
  /*$searchParams*/
)